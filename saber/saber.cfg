# Rules of config file for Polaris ConfigParser:

# 1) comments start with #.
# 2) parameter name and values cannot contain space.
# 3) directories can be nested and specified with curly brackets { }. The closing bracket must have white space before and after.
# 4) between parameter key and value there should be either colon or equal sign.
# 5) at the end of parameter value, there should be a comma.
# 6) arrays can be passed in: simply use space to separate each values.


module {

    graphics{
        lib : ./lib/libpolaris.so,
        fcn : SaberGraphics,
        enable : true,
        next_module : daq,
    }

    recorder{
        lib : ./lib/libpolaris.so,
        fcn : SaberDiskRecorder,
        enable : true,
        next_module : graphics,
    }

    daq { 
        lib : ./lib/libpolaris.so,
        fcn : SaberDAQ,
#        fcn : plrsModuleDAQ,
        enable : true,
        next_module : recorder,

#        connection0 {
#            type : vme_optical_link,    # vme_optical_link or vme_usb
#            link_number : 0,
#            board_number : 0
#        }

        board0 {
            enable : true,
            connect_via : direct,
            link_number : 0,
            board_number : 0,
            address : 0x22100000,

            trigger_over_threshold : false,
            trigger_overlap : false,
            run_mode : register_controlled,

            software_trigger_enable : true,
            external_trigger_enable : false,

            fp_software_trigger_out_enable : true,
            fp_external_trigger_out_enable : true,

            logic_TTL : false,
            LVDS_IO_out : true,

            custom_size_enable : true,
            pre_trigger_window_us : 0.4,   # minimum 0.016
            post_trigger_window_us : 4.0,   # minimum is about 0.3

            channel0 {
                enable : true,
                threshold : 3500, #3840
                time_cross_threshold : 0,
                DAC : 27750,   #with 7750, baseline is close to 3980
                local_trigger_enable : true,
                fp_local_trigger_out_enable : true,
            }
            channel* {
                enable : false,
                threshold : 2046,
                time_cross_threshold : 0x76,
                DAC : 0x765,
                local_trigger_enable : false,
                fp_local_trigger_out_enable : false,
            }
        }

        logic_trigger {
            enable : false,
            connect_via : daisy_chain, #connection0,
            address : 0x10000000,

            trigger_mode : pc,      # crystal, pc, veto, calibration
            enable_crystal_retrigger : false,
            enable_pc_retrigger : true,

            veto_mask : 0x3,
            majority_level : 2,
    
            signal_delay : 1,
            trigger_time : 2,
    
            crystal_gate_length : 0x1,
            pc_gate_length : 0x6,

            dead_time : 0xff,
            veto_time : 0xff,

        }

        periodic_trigger {
            enable : true,
            source : software,  # fpga or software
            rate : 2000  # rate in ms
        }

    }
}

