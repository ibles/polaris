# Rules of config file for Polaris ConfigParser:

# 1) comments start with #.
# 2) parameter name and values cannot contain space.
# 3) directories can be nested and specified with curly brackets { }. Each bracket must have white space before and after to be identified.
# 4) between parameter key and value there should be either a colon or an equal sign.
# 5) at the end of parameter value, there should be a comma.
# 6) arrays can be passed in: simply use space to separate each values.

# In this demo, two modules are enabled.
# A module is enabled by where to find (which library, parameter lib) and its name (parameter fcn), and then give parameter "enable" a "true" value.

module {

    foo : bar,
        # this parameter is accessed inside the program as /module/foo
        # it can be accessed with configuration parser by GetXXX("/path/to/parameter", default_value)

    daq { 
        lib : ./lib/librandom.so,
            # library that contains the module
        fcn : RandomWalkDAQ,
            # name of the module to be loaded
        enable : true,
            # set to be true to enable
        next : recorder,
            # this is the module to which daq will pass pointer to acquired data

        sample_interval : 100000,
            # interval in microseconds between samples.
        buff_depth : 20,
            # number of buffers to allocate at the beginning.
            # this is the max number of pointers to data to be passed around.

        comment : "RandomWalkDAQ will read random integers from /dev/rand device file",
            # an integral string is pased with the quotation sign. otherwise, it will show up as array of words.
    }

    recorder { 
        lib : ./lib/librandom.so,
        fcn : RandomWalkRecorder,
        enable : true,
        next : daq,
            # after recorder finishes processing data, it should give resources back to daq module.
    }
}
